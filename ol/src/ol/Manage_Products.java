                                                                            package ol;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */



/**
 *
 * @author admin
 */
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

public class Manage_Products extends javax.swing.JFrame {
    
    Connection con;
    Statement stmt;
    ResultSet rs;

    /**
     * Creates new form Manage_Products
     */
    private nikuy mainFrame;
    public Manage_Products() {
        initComponents();
        connectToDatabase();
        loadProducts();
        this.mainFrame = mainFrame;
    
    }
    private boolean validateFields() {
    return !txtShoeID.getText().isEmpty() &&
           !txtShoeSize.getText().isEmpty() &&
           !txtShoeName.getText().isEmpty() &&
           !txtStock.getText().isEmpty() &&
           !txtPrice.getText().isEmpty();
}
    public static void reduceStock(String productName, int quantity) {
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/your_db", "your_user", "your_pass");
        String query = "UPDATE manage_products SET stock = stock - ? WHERE product_name = ?";
        PreparedStatement stmt = conn.prepareStatement(query);
        stmt.setInt(1, quantity);
        stmt.setString(2, productName);
        stmt.executeUpdate();
        conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }
private void connectToDatabase() {
    try {
        String host = "jdbc:derby://localhost:1527/Database"; // change 'Database' if needed
        String user = "Renzyx28";  // your DB username
        String pass = "Renzyx28";  // your DB password
        con = DriverManager.getConnection(host, user, pass);
        stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
        JOptionPane.showMessageDialog(this, "Connected to database.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Database Connection Failed: " + e.getMessage());
    }
}

    private void loadProducts() {
    DefaultTableModel model = (DefaultTableModel) table2.getModel();
    model.setRowCount(0); // clear existing

    try {
        String sql = "SELECT * FROM CART";
        rs = stmt.executeQuery(sql);

        while (rs.next()) {
            int id = rs.getInt("SHOEID");
            int size = rs.getInt("SHOESIZE");
            String name = rs.getString("SHOENAME");
            int stock = rs.getInt("STOCK");
            double price = rs.getDouble("PRICE");
            model.addRow(new Object[]{id, size, name, stock, price});
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Failed to load products: " + e.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtShoeID = new javax.swing.JTextField();
        txtShoeSize = new javax.swing.JTextField();
        txtShoeName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnBackFromProducts = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        btnUpdate2 = new javax.swing.JButton();
        btnLowStock = new javax.swing.JButton();
        btnRestock = new javax.swing.JButton();
        btnCalculateSales = new javax.swing.JButton();
        btnDelete2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel3.setText("ShoeName");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel6.setText("ShoeSize");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));
        getContentPane().add(txtShoeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 100, -1));
        getContentPane().add(txtShoeSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 100, -1));
        getContentPane().add(txtShoeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 100, -1));

        btnAdd.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 230, 0));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 70, 30));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 230, 0));
        jLabel1.setText("Manage Products");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 150, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 50));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel2.setText("sID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel4.setText("Stock");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));
        jPanel1.add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 100, -1));

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 100, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel5.setText("Price");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel7.setText("Add Products");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 120, 20));

        btnBackFromProducts.setBackground(new java.awt.Color(0, 0, 0));
        btnBackFromProducts.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnBackFromProducts.setForeground(new java.awt.Color(255, 230, 0));
        btnBackFromProducts.setText("Back");
        btnBackFromProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackFromProductsActionPerformed(evt);
            }
        });
        jPanel1.add(btnBackFromProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 90, 30));

        btnClear.setBackground(new java.awt.Color(0, 0, 0));
        btnClear.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 230, 0));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, 70, 30));

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "sID", "SHOESIZE", "SHOENAME", "STOCK", "PRICE"
            }
        ));
        jScrollPane1.setViewportView(table2);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 470, -1));

        btnUpdate2.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdate2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnUpdate2.setForeground(new java.awt.Color(255, 230, 0));
        btnUpdate2.setText("Update");
        btnUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 440, -1, -1));

        btnLowStock.setBackground(new java.awt.Color(0, 0, 0));
        btnLowStock.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnLowStock.setForeground(new java.awt.Color(255, 230, 0));
        btnLowStock.setText("Check Stocks");
        btnLowStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLowStockActionPerformed(evt);
            }
        });
        jPanel1.add(btnLowStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 440, -1, -1));

        btnRestock.setBackground(new java.awt.Color(0, 0, 0));
        btnRestock.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnRestock.setForeground(new java.awt.Color(255, 230, 0));
        btnRestock.setText("Restock");
        btnRestock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestockActionPerformed(evt);
            }
        });
        jPanel1.add(btnRestock, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, -1, -1));

        btnCalculateSales.setBackground(new java.awt.Color(0, 0, 0));
        btnCalculateSales.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnCalculateSales.setForeground(new java.awt.Color(255, 230, 0));
        btnCalculateSales.setText("Calculate Sales");
        btnCalculateSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateSalesActionPerformed(evt);
            }
        });
        jPanel1.add(btnCalculateSales, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, -1, -1));

        btnDelete2.setBackground(new java.awt.Color(0, 0, 0));
        btnDelete2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnDelete2.setForeground(new java.awt.Color(255, 230, 0));
        btnDelete2.setText("Delete");
        btnDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 440, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete2ActionPerformed
            DefaultTableModel model = (DefaultTableModel) table2.getModel();
    int selectedRow = table2.getSelectedRow();
    
       if (selectedRow != -1) {
        int shoeID = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
        try {
            String sql = "DELETE FROM CART WHERE SHOEID = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, shoeID);
            ps.executeUpdate();

            model.removeRow(selectedRow);
            JOptionPane.showMessageDialog(this, "Product deleted successfully.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error deleting product: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row to delete.");
    }
    }//GEN-LAST:event_btnDelete2ActionPerformed

    private void btnUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate2ActionPerformed
   int selectedRow = table2.getSelectedRow();
 if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row to update.");
        return;
    }

    if (!validateFields()) {
        JOptionPane.showMessageDialog(this, "All fields must be filled.");
        return;
    }

    try {
        int shoeID = Integer.parseInt(txtShoeID.getText());
        int shoeSize = Integer.parseInt(txtShoeSize.getText());
        String shoeName = txtShoeName.getText();
        int stock = Integer.parseInt(txtStock.getText());
        double price = Double.parseDouble(txtPrice.getText());

        String sql = "UPDATE CART SET SHOESIZE = ?, SHOENAME = ?, STOCK = ?, PRICE = ? WHERE SHOEID = ?";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, shoeSize);
        ps.setString(2, shoeName);
        ps.setInt(3, stock);
        ps.setDouble(4, price);
        ps.setInt(5, shoeID);

        ps.executeUpdate();

        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        model.setValueAt(shoeID, selectedRow, 0);
        model.setValueAt(shoeSize, selectedRow, 1);
        model.setValueAt(shoeName, selectedRow, 2);
        model.setValueAt(stock, selectedRow, 3);
        model.setValueAt(price, selectedRow, 4);

        JOptionPane.showMessageDialog(this, "Product updated successfully!");
        clearFields();

    } catch (SQLException | NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Error updating product: " + e.getMessage());
    }
    }//GEN-LAST:event_btnUpdate2ActionPerformed

    private void btnBackFromProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackFromProductsActionPerformed
    Admin_Interface ai = new Admin_Interface();
    ai.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btnBackFromProductsActionPerformed

    private void btnCalculateSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateSalesActionPerformed
     DefaultTableModel model = (DefaultTableModel) table2.getModel();
    double totalSales = 0;

    for (int i = 0; i < model.getRowCount(); i++) {
        int stock = Integer.parseInt(model.getValueAt(i, 3).toString());  
        double price = Double.parseDouble(model.getValueAt(i, 4).toString()); 

        int initialStock = 50; 
        int sold = initialStock - stock;

        if (sold > 0) {
            totalSales += sold * price;
        }
    }

    JOptionPane.showMessageDialog(this, "Total Sales Amount: ₱" + totalSales);
    }//GEN-LAST:event_btnCalculateSalesActionPerformed

    private void btnLowStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLowStockActionPerformed
    DefaultTableModel model = (DefaultTableModel) table2.getModel();
    StringBuilder lowStockItems = new StringBuilder();

    for (int i = 0; i < model.getRowCount(); i++) {
        int stock = Integer.parseInt(model.getValueAt(i, 3).toString());
        if (stock < 5) {
            lowStockItems.append(model.getValueAt(i, 2).toString())  // SHOENAME
                         .append(" (Stock: ")
                         .append(stock)
                         .append(")\n");
        }
    }

    if (lowStockItems.length() > 0) {
        JOptionPane.showMessageDialog(this, "Low Stock Shoes:\n" + lowStockItems);
    } else {
        JOptionPane.showMessageDialog(this, "All stocks are sufficient.");
    }
    }//GEN-LAST:event_btnLowStockActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    if (!validateFields()) {
        JOptionPane.showMessageDialog(this, "All fields must be filled.");
        return;
    }

    try {
        int shoeID = Integer.parseInt(txtShoeID.getText());
        int shoeSize = Integer.parseInt(txtShoeSize.getText());
        String shoeName = txtShoeName.getText();
        int stock = Integer.parseInt(txtStock.getText());
        double price = Double.parseDouble(txtPrice.getText());

        String sql = "INSERT INTO CART (SHOEID, SHOESIZE, SHOENAME, STOCK, PRICE) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, shoeID);
        ps.setInt(2, shoeSize);
        ps.setString(3, shoeName);
        ps.setInt(4, stock);
        ps.setDouble(5, price);
        ps.executeUpdate();

        DefaultTableModel model = (DefaultTableModel) table2.getModel();
        model.addRow(new Object[]{shoeID, shoeSize, shoeName, stock, price});

        JOptionPane.showMessageDialog(this, "Product added successfully!");
        clearFields();

    } catch (SQLException | NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Error adding product: " + e.getMessage());
    }

   
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRestockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestockActionPerformed
    int row = table2.getSelectedRow();
    if (row >= 0) {
        String input = JOptionPane.showInputDialog("Enter quantity to restock:");
        int restockAmount = Integer.parseInt(input);
        int currentStock = Integer.parseInt(table2.getValueAt(row, 3).toString());
        table2.setValueAt(currentStock + restockAmount, row, 3);
    } else {
        JOptionPane.showMessageDialog(this, "Please select a shoe to restock.");
    }
    }//GEN-LAST:event_btnRestockActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
    clearFields();
}

private void clearFields() {
    txtShoeID.setText("");
    txtShoeSize.setText("");
    txtShoeName.setText("");
    txtStock.setText("");
    txtPrice.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manage_Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manage_Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manage_Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manage_Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manage_Products().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBackFromProducts;
    private javax.swing.JButton btnCalculateSales;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete2;
    private javax.swing.JButton btnLowStock;
    private javax.swing.JButton btnRestock;
    private javax.swing.JButton btnUpdate2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table2;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtShoeID;
    private javax.swing.JTextField txtShoeName;
    private javax.swing.JTextField txtShoeSize;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
